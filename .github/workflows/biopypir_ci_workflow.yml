---
name: BIOPYPIR-APPROVED
on: 
  schedule:
    - cron: '0 0 * * 0'  #'0 12 * * 7'   #  - cron: '0 12 * * 7'   # 12:00 UTC every Sat  
  push:
jobs:
  biopypir_testing:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6,3.7] 
        os: [ubuntu-latest, macOS-latest] 
    env: 
      WORKSPACE: ${{ github.workspace }} # /home/runner/work/scedar/scedar
      REPO: ${{ github.repository }}
    steps:
    - name: Create cache file
      run: mkdir check-SHA; echo ${{ github.sha }} > github-sha.txt; cat github-sha.txt
    #===============================================#
    #- name: Check SHA
    # id: check_sha
    #  uses: actions/cache@v1
    #  with:
    #    path: check-SHA
    #    key: check-SHA-${{ github.sha }}
    #===============================================#
    #- name: Some subsequent steps
    #  if: steps.check_sha.outputs.cache-hit != 'true'
    #  run: echo "Cache hit found...Execute the subsequent steps" #; exit 1 # no way to exit nicely?
    #===============================================#
    - name: STEP 1. Check-Out Repo 
      uses: actions/checkout@v2     
    #===============================================#
    - name: Set Up ${{matrix.os}}-py${{matrix.python-version}}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}       
    #===============================================#
    - name: STEP 3. Install dependencies
      run: |
        pip install pylint
        pip install --upgrade pip setuptools wheel
        pip install --no-binary :all: nmslib
        pip install .
        pip install pytest
        pip install pytest-cov
        pip install python-coveralls
      #pip install coveralls
    #===============================================#
    - name: simple linter
      id: linter
      run: |
          chmod +x .github/workflows/biopypir_helper.sh
          .github/workflows/biopypir_helper.sh  "LINT"  "${{github.repository}}"
    #===============================================#
    - name: test build status
      id: builder
      run: .github/workflows/biopypir_helper.sh  "BUILD"
    #===============================================#
    - name: simple pytest
      id: pytester
      run: .github/workflows/biopypir_helper.sh "TEST";     #  unless job2 needs: [job1]
   #===============================================#
    #- name: check pytest pass
    #  id: pytestpass
    #  if: success()
    #  run: echo "::set-output name=pytestpass::True" 
    #===============================================#
    - name: PIP deployment test    # make sure this fails if deployment fails, does OS matter here?
      continue-on-error: true
      uses: BSFishy/pip-action@v1
      with:
        packages: scedar   #==0.2.0  # use ${{github.repository}} to hardcode
   #===============================================#
    - name: PIP pass check
      id: pipcheck
      if: success()
      run: echo "::set-output name=pip_output::True"  
    #===============================================#
    #- name: check license
    #  if: startsWith(matrix.os, 'ubuntu')
    #  uses: datreeio/validate-license-action@master
    #  with:
    #    args: "MIT,ISC,BSD"  #"Apache License 2.0, MIT, ISC"
    #===============================================#
    #- name: license pass check   # alter the actual license-check action (bash fnc from js env) 
    #  id: licensecheck           # to output PASS on success
    #  if: success()     
    #  run: echo "::set-output name=license_output::True"
   #===============================================#
    - name: gather outputs
      id: file
      run: |
          .github/workflows/biopypir_helper.sh  "GATHER" \
          "${{github.repository}}" \
          "${{steps.linter.outputs.pylint-score}}" \
          "${{matrix.python-version}}" \
          "${{matrix.os}}" \
          "${{github.run_id}}"
     #   "${{steps.builder.outputs.build_output}}" \
     #   "${{steps.pytester.outputs.pytest_score}}" \
     #   "${{steps.pipcheck.outputs.pip_output}}" \
     #   "${{steps.pytestpass.outputs.pytestpass}}" \
     #   "${{matrix.python-version}}" 
   #===============================================#
    - name: Upload artifact
      uses: actions/upload-artifact@v2-preview
      with:  
        name: biopypir-${{matrix.os}}-py${{matrix.python-version}}
        path: "*-latest-*.json"   #${{matrix.os}}-py${{matrix.python-version}}.json
    
  job2:
      needs: [biopypir_testing] #runs if at least one job succeeds?
      if: always()
      runs-on: [ubuntu-latest]
      steps:
        - name: STEP 1. Check-Out Repo 
          uses: actions/checkout@v2 
        #===============================================# 
        - name: Download artifact
          uses: actions/download-artifact@v2-preview
          with:
            path: parallel_runs/
        - name: list artifacts
          run: |
              pwd; ls; cd parallel_runs; ls
        #===============================================#
        - name: check the jobs
          run:  |
              chmod +x .github/workflows/biopypir_helper.sh
              .github/workflows/biopypir_helper.sh  "EVAL" ${{github.repository}} ${{github.run_id}}
        #===============================================#
        - name: Global webhook
          if: always() 
          uses: muinmomin/webhook-action@v1.0.0
          with:
            url: ${{ secrets.WEBHOOK_URL }}
            data: "{mystatus.json}"
